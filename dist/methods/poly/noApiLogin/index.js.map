{"version":3,"sources":["../src/methods/poly/noApiLogin/index.ts"],"names":[],"mappings":";;AAKA,MAAM,CAAC,OAAO,GAAG,UAAC,KAAa,EAAE,QAAgB;IAC/C,IAAM,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAC/C,IAAM,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEjD,OAAO,IAAI,OAAO,CAAC,UAAC,GAAG,EAAE,GAAG;QAC1B,YAAY,EAAE;aACX,IAAI,CAAC,UAAA,SAAS,IAAI,OAAA,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,EAAzC,CAAyC,CAAC;aAC5D,IAAI,CAAC,UAAA,OAAO,IAAI,OAAA,GAAG,CAAC,OAAO,CAAC,EAAZ,CAAY,CAAC;aAC7B,KAAK,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,GAAG,CAAC,EAAR,CAAQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","file":"index.js","sourcesContent":["export interface LoginData {\r\n  MALSESSIONID: string;\r\n  csrf_token: string;\r\n}\r\n\r\nmodule.exports = (login: string, password: string) => {\r\n  const getStartData = require(\"./getStartData\");\r\n  const loginWithData = require(\"./loginWithData\");\r\n\r\n  return new Promise((res, rej) => {\r\n    getStartData()\r\n      .then(startData => loginWithData(login, password, startData))\r\n      .then(logData => res(logData))\r\n      .catch(err => rej(err));\r\n  });\r\n};\r\n"],"sourceRoot":"../../../../src"}