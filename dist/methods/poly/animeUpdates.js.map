{"version":3,"sources":["../src/methods/poly/animeUpdates.ts"],"names":[],"mappings":"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","file":"animeUpdates.js","sourcesContent":["export default (name:string) => {\n  const rp = require('request-promise-native');\n  const cheerio = require('cheerio');\n\n  \n  return new Promise( (res, rej) => {\n    let $ = null;\n    rp(`https://myanimelist.net/profile/${name}`)\n    .then( body => cheerio.load(body))\n    .then( ch => {\n      $=ch;\n      const updatesA = $('div.statistics-updates','div.updates.anime')\n      if(!updatesA) { if(updatesA.length == 0) res([]) }\n      return updatesA;\n    })\n    .then( updatesA => {\n      let array = [];\n      updatesA.each( (i, elem) => {\n        let title = $(elem).find('a','div.data').text().trim();\n        let link = $(elem).find('a').attr('href');\n        let ep = $(elem).find('div.fn-grey2 span').eq(0).text().trim()\n        let score = $(elem).find('div.fn-grey2 span').eq(1).text().trim()\n        let img = $(elem).find('img').attr('src')\n        let graph = $(elem).find('span.graph-inner')\n        let date = $(elem).find('span.fn-grey2','div.clearfix').text().trim()\n\n        let watching = graph.hasClass('watching')\n        let dropped = graph.hasClass('dropped')\n        let completed = graph.hasClass('completed')\n        let on_hold = graph.hasClass('on_hold')\n        let plan_to_watch = graph.hasClass('plan_to_watch')\n\n        let color = 0;\n        if (watching) {\n          color=2994233;\n        }\n        else if(dropped){\n          color=10563377;\n        }\n        else if(completed){\n          color=2507919;\n        }\n        else if(on_hold){\n          color=16372823;\n        }\n        else if(plan_to_watch){\n          color=12829635;\n        }\n\n        ep = parseInt(ep);\n        score = parseInt(score);\n\n        let obj = {title,link, ep,score,img,date,color}\n        array.push(obj)\n      });\n  \n      res(array);\n    })\n    .catch( e => rej(e) )\n  })\n}\n\nexport interface animeUpdatesOBJ {\n  title: string;\n  link: string;\n  ep: number;\n  score: number;\n  img: string;\n  date: string;\n  color: number;\n}\n"],"sourceRoot":"../../../src"}