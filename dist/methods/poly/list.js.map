{"version":3,"sources":["../src/methods/poly/list.ts"],"names":[],"mappings":"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","file":"list.js","sourcesContent":["module.exports = (name:string) => {\r\n    const rp = require('request-promise-native');\r\n    const toJson = require('xml2js').parseString;\r\n\r\n    const reMap = (XmlToJson) => {\r\n        const myanimelist = XmlToJson.myanimelist;\r\n        const myinfo = myanimelist.myinfo[0];\r\n        const anime = myanimelist.anime;\r\n        \r\n        const ReMapMyInfo = {\r\n            user_id:myinfo.user_id[0],\r\n            user_name: myinfo.user_name[0],\r\n            user_watching: myinfo.user_watching[0],\r\n            user_completed: myinfo.user_completed[0],\r\n            user_onhold: myinfo.user_onhold[0],\r\n            user_dropped: myinfo.user_dropped[0],\r\n            user_plantowatch: myinfo.user_plantowatch[0],\r\n            user_days_spent_watching: myinfo.user_days_spent_watching[0]\r\n        }\r\n\r\n        const ReMapAnime = anime.map( e => {\r\n            return {\r\n                series_animedb_id: e.series_animedb_id[0],\r\n                series_title: e.series_title[0],\r\n                series_synonyms: e.series_synonyms[0],\r\n                series_type: e.series_type[0],\r\n                series_episodes: e.series_episodes[0],\r\n                series_status: e.series_status[0],\r\n                series_start: e.series_start[0],\r\n                series_end: e.series_end[0],\r\n                series_image: e.series_image[0],\r\n                my_id: e.my_id[0],\r\n                my_watched_episodes: e.my_watched_episodes[0],\r\n                my_start_date: e.my_start_date[0],\r\n                my_finish_date: e.my_finish_date[0],\r\n                my_score: e.my_score[0],\r\n                my_status: e.my_status[0],\r\n                my_rewatching: e.my_rewatching[0],\r\n                my_rewatching_ep: e.my_rewatching_ep[0],\r\n                my_last_updated: e.my_last_updated[0],\r\n                my_tags: e.my_tags[0]\r\n            }\r\n        })\r\n        return {\r\n            myinfo:ReMapMyInfo,\r\n            anime:ReMapAnime\r\n        }\r\n    }\r\n\r\n    return new Promise( (res, rej) => {\r\n        rp(`https://myanimelist.net/malappinfo.php?u=${name}`)\r\n        .then( res => {\r\n            return new Promise ((xmlRes,xmlRej)=>{\r\n                toJson(res, (err,json) => {\r\n                    if(err) rej('Error')\r\n                    else xmlRes(json)\r\n                })\r\n            })\r\n        })\r\n        .then( json => {\r\n            if(json.myanimelist.myinfo) return reMap(json);\r\n            else rej(\"User Not Found\");\r\n        })\r\n        .then( json => res(json) )\r\n                .catch( err => rej(`Error: ${err}`) )\r\n    });\r\n}\r\n\r\n\r\nexport interface ListsOBJ {\r\n    myinfo: {\r\n      user_id: string;\r\n      user_name: string;\r\n      user_watching: string;\r\n      user_completed: string;\r\n      user_onhold: string;\r\n      user_dropped: string;\r\n      user_plantowatch: string;\r\n      user_days_spent_watching: string;\r\n    };\r\n    anime: [\r\n      {\r\n        series_animedb_id: string;\r\n        series_title: string;\r\n        series_synonyms: string;\r\n        series_type: string;\r\n        series_episodes: string;\r\n        series_status: string;\r\n        series_start: string;\r\n        series_end: string;\r\n        series_image: string;\r\n        my_id: string;\r\n        my_watched_episodes: string;\r\n        my_start_date: string;\r\n        my_finish_date: string;\r\n        my_score: string;\r\n        my_status: string;\r\n        my_rewatching: string;\r\n        my_rewatching_ep: string;\r\n        my_last_updated: string;\r\n        my_tags: string;\r\n      }\r\n    ];\r\n  }"],"sourceRoot":"../../../src"}