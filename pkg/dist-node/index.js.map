{"version":3,"file":"index.js","sources":["../dist-src/jikan/url.js","../dist-src/jikan/jikanApi.js","../dist-src/jikan/anime.js","../dist-src/jikan/manga.js","../dist-src/jikan/person.js","../dist-src/jikan/character.js","../dist-src/jikan/search.js","../dist-src/jikan/season.js","../dist-src/jikan/seasonArchive.js","../dist-src/jikan/seasonLater.js","../dist-src/jikan/schedule.js","../dist-src/jikan/top.js","../dist-src/jikan/genre.js","../dist-src/jikan/producer.js","../dist-src/jikan/magazine.js","../dist-src/jikan/user.js","../dist-src/jikan/club.js","../dist-src/jikan/types/animeGenre.js","../dist-src/jikan/types/mangaGenre.js","../dist-src/jikan/types/animeType.js","../dist-src/jikan/types/mangaType.js","../dist-src/jikan/types/animeStatus.js","../dist-src/jikan/types/mangaStatus.js","../dist-src/jikan/types/animeOrderBy.js","../dist-src/jikan/types/mangaOrderBy.js","../dist-src/jikan/types/sort.js","../dist-src/jikan/types/rating.js","../dist-src/mod.js","../dist-src/index.js"],"sourcesContent":["import properUrlJoin from 'proper-url-join';\nfunction joinUrl(base, params) {\n    // @ts-ignore\n    return properUrlJoin(base, ...params);\n}\nexport { joinUrl };\n//# sourceMappingURL=url.js.map","export const jikanUrl = \"https://api.jikan.moe/v3\";\n// @ts-ignore\n// global.ENVTYPE = \"MOCHA\";\n// import axios from \"axios\";\n// @ts-ignore\n// global.jikanGet = (s) => s;\n// @ts-ignore\n// global.jikanGet = function jikanGet(url: string): Promise<any> {\n//   return axios.get(url);\n// };\n// @ts-ignore\n// if (global.ENVTYPE === \"MOCHA\") {\n//   const axios = import(\"axios\");\n//   // const axios = require(\"axios\");\n// axios.then(module => {\n//   console.log(\"LOADED\");\n//     const axios = module.default;\n//     // @ts-ignore\n//     global.jikanGet = function jikanGet(url: string): Promise<any> {\n//       return axios.get(url);\n//     };\n// });\n// }\n// else {\n//   // @ts-ignore\n//   global.jikanGet = function jikanGet(url: string): Promise<any> {\n//     // @ts-ignore\n//     return fetch(url);\n//   };\n// }\n// }\n// @ts-ignore\n// global.jikanGet = function jikanGet(url: string): Promise<any> {\n//   return axios.get(url);\n// };\n// @ts-ignore\n// let get: (string) => any = global.jikanGet;\nexport function jikanGet(url) {\n    // if (get) {\n    //   return get(url);\n    // }\n    // else {\n    //   // @ts-ignore\n    //   return global.jikanGet(url);\n    // }\n    // @ts-ignore\n    return globalThis.jikanGet(url);\n}\n//# sourceMappingURL=jikanApi.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Anime {\n    constructor(id) {\n        this.baseUrl = `${jikanUrl}/anime/${id}`;\n    }\n    info() {\n        return jikanGet(this.baseUrl);\n    }\n    charactersStaff() {\n        return jikanGet(joinUrl(this.baseUrl, [\"characters_staff\"]));\n    }\n    episodes(p) {\n        let params = [\"episodes\"];\n        if (p != null)\n            params.push(String(p));\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n    news() {\n        return jikanGet(joinUrl(this.baseUrl, [\"news\"]));\n    }\n    pictures() {\n        return jikanGet(joinUrl(this.baseUrl, [\"pictures\"]));\n    }\n    videos() {\n        return jikanGet(joinUrl(this.baseUrl, [\"videos\"]));\n    }\n    stats() {\n        return jikanGet(joinUrl(this.baseUrl, [\"stats\"]));\n    }\n    forum() {\n        return jikanGet(joinUrl(this.baseUrl, [\"forum\"]));\n    }\n    moreInfo() {\n        return jikanGet(joinUrl(this.baseUrl, [\"moreinfo\"]));\n    }\n    reviews(p) {\n        let params = [\"reviews\"];\n        if (p != null)\n            params.push(String(p));\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n    recommendations() {\n        return jikanGet(joinUrl(this.baseUrl, [\"recommendations\"]));\n    }\n    userUpdates(p) {\n        let params = [\"userupdates\"];\n        if (p != null)\n            params.push(String(p));\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n}\nexport default function (id) {\n    return new Anime(id);\n}\n//# sourceMappingURL=anime.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Manga {\n    constructor(id) {\n        this.baseUrl = `${jikanUrl}/manga/${id}`;\n    }\n    info() {\n        return jikanGet(this.baseUrl);\n    }\n    characters() {\n        return jikanGet(joinUrl(this.baseUrl, [\"characters\"]));\n    }\n    news() {\n        return jikanGet(joinUrl(this.baseUrl, [\"news\"]));\n    }\n    pictures() {\n        return jikanGet(joinUrl(this.baseUrl, [\"pictures\"]));\n    }\n    stats() {\n        return jikanGet(joinUrl(this.baseUrl, [\"stats\"]));\n    }\n    forum() {\n        return jikanGet(joinUrl(this.baseUrl, [\"forum\"]));\n    }\n    moreInfo() {\n        return jikanGet(joinUrl(this.baseUrl, [\"moreinfo\"]));\n    }\n    reviews(p) {\n        let params = [\"reviews\"];\n        if (p != null)\n            params.push(String(p));\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n    recommendations() {\n        return jikanGet(joinUrl(this.baseUrl, [\"recommendations\"]));\n    }\n    userUpdates(p) {\n        let params = [\"userupdates\"];\n        if (p != null)\n            params.push(String(p));\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n}\nexport default function (id) {\n    return new Manga(id);\n}\n//# sourceMappingURL=manga.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Person {\n    constructor(id) {\n        this.baseUrl = `${jikanUrl}/person/${id}`;\n    }\n    info() {\n        return jikanGet(this.baseUrl);\n    }\n    pictures() {\n        return jikanGet(joinUrl(this.baseUrl, [\"pictures\"]));\n    }\n}\nexport default function (id) {\n    return new Person(id);\n}\n//# sourceMappingURL=person.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Character {\n    constructor(id) {\n        this.baseUrl = `${jikanUrl}/character/${id}`;\n    }\n    info() {\n        return jikanGet(this.baseUrl);\n    }\n    pictures() {\n        return jikanGet(joinUrl(this.baseUrl, [\"pictures\"]));\n    }\n}\nexport default function (id) {\n    return new Character(id);\n}\n//# sourceMappingURL=character.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Search {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/search`;\n    }\n    search(type, params) {\n        let qparams = Object.keys(params)\n            .filter((k) => params[k] != null)\n            .map((k) => `${k}=${encodeURIComponent(params[k])}`)\n            .join(\"&\");\n        return jikanGet(joinUrl(this.baseUrl, [type, \"?\" + qparams]));\n    }\n    anime(params) {\n        return this.search(\"anime\", params);\n    }\n    manga(params) {\n        return this.search(\"manga\", params);\n    }\n    person(params) {\n        return this.search(\"person\", params);\n    }\n    character(params) {\n        return this.search(\"character\", params);\n    }\n}\nexport default function () {\n    return new Search();\n}\n//# sourceMappingURL=search.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Season {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/season`;\n    }\n    info(year, season) {\n        return jikanGet(joinUrl(this.baseUrl, [String(year), String(season)]));\n    }\n}\nexport default function (year, season) {\n    return new Season().info(year, season);\n}\n//# sourceMappingURL=season.js.map","import { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass SeasonArchive {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/season/archive`;\n    }\n    info() {\n        return jikanGet(this.baseUrl);\n    }\n}\nexport default function () {\n    return new SeasonArchive().info();\n}\n//# sourceMappingURL=seasonArchive.js.map","import { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass SeasonLater {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/season/later`;\n    }\n    info() {\n        return jikanGet(this.baseUrl);\n    }\n}\nexport default function () {\n    return new SeasonLater().info();\n}\n//# sourceMappingURL=seasonLater.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Schedule {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/schedule`;\n    }\n    all() {\n        return jikanGet(this.baseUrl);\n    }\n    monday() {\n        return jikanGet(joinUrl(this.baseUrl, [\"monday\"]));\n    }\n    tuesday() {\n        return jikanGet(joinUrl(this.baseUrl, [\"tuesday\"]));\n    }\n    wednesday() {\n        return jikanGet(joinUrl(this.baseUrl, [\"wednesday\"]));\n    }\n    thursday() {\n        return jikanGet(joinUrl(this.baseUrl, [\"thursday\"]));\n    }\n    friday() {\n        return jikanGet(joinUrl(this.baseUrl, [\"friday\"]));\n    }\n    saturday() {\n        return jikanGet(joinUrl(this.baseUrl, [\"saturday\"]));\n    }\n    sunday() {\n        return jikanGet(joinUrl(this.baseUrl, [\"sunday\"]));\n    }\n    other() {\n        return jikanGet(joinUrl(this.baseUrl, [\"other\"]));\n    }\n    unknown() {\n        return jikanGet(joinUrl(this.baseUrl, [\"unknown\"]));\n    }\n}\nexport default function () {\n    return new Schedule();\n}\n//# sourceMappingURL=schedule.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Top {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/top`;\n    }\n    anime() {\n        return new TopAnime(this.baseUrl);\n    }\n    manga() {\n        return new TopManga(this.baseUrl);\n    }\n    people() {\n        return new TopSimple(this.baseUrl, \"people\");\n    }\n    characters() {\n        return new TopSimple(this.baseUrl, \"characters\");\n    }\n}\n// Class For \"people\" And \"characters\"\nclass TopSimple {\n    constructor(baseUrl, type) {\n        this.baseUrl = baseUrl;\n        this.type = type;\n    }\n    topGet(p, subType) {\n        let params = [this.type];\n        if (p != null)\n            params[1] = String(p);\n        else\n            params[1] = \"1\";\n        params[2] = subType;\n        const url = joinUrl(this.baseUrl, params);\n        return jikanGet(url);\n    }\n    all(p) {\n        return this.topGet(p, \"\");\n    }\n}\nclass TopAnime {\n    constructor(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n    topGet(p, subType) {\n        let params = [\"anime\"];\n        if (p != null)\n            params[1] = String(p);\n        else\n            params[1] = \"1\";\n        params[2] = subType;\n        const url = joinUrl(this.baseUrl, params);\n        return jikanGet(url);\n    }\n    all(p) {\n        return this.topGet(p, \"\");\n    }\n    airing(p) {\n        return this.topGet(p, \"airing\");\n    }\n    upcoming(p) {\n        return this.topGet(p, \"upcoming\");\n    }\n    tv(p) {\n        return this.topGet(p, \"tv\");\n    }\n    movie(p) {\n        return this.topGet(p, \"movie\");\n    }\n    ova(p) {\n        return this.topGet(p, \"ova\");\n    }\n    special(p) {\n        return this.topGet(p, \"special\");\n    }\n    byPopularity(p) {\n        return this.topGet(p, \"bypopularity\");\n    }\n    favorite(p) {\n        return this.topGet(p, \"favorite\");\n    }\n}\nclass TopManga {\n    constructor(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n    topGet(p, subType) {\n        let params = [\"manga\"];\n        if (p != null)\n            params[1] = String(p);\n        else\n            params[1] = \"1\";\n        params[2] = subType;\n        const url = joinUrl(this.baseUrl, params);\n        return jikanGet(url);\n    }\n    all(p) {\n        return this.topGet(p, \"\");\n    }\n    manga(p) {\n        return this.topGet(p, \"manga\");\n    }\n    novels(p) {\n        return this.topGet(p, \"novels\");\n    }\n    oneshots(p) {\n        return this.topGet(p, \"oneshots\");\n    }\n    doujin(p) {\n        return this.topGet(p, \"doujin\");\n    }\n    manhwa(p) {\n        return this.topGet(p, \"manhwa\");\n    }\n    manhua(p) {\n        return this.topGet(p, \"manhua\");\n    }\n    byPopularity(p) {\n        return this.topGet(p, \"bypopularity\");\n    }\n    favorite(p) {\n        return this.topGet(p, \"favorite\");\n    }\n}\nexport default function () {\n    return new Top();\n}\n//# sourceMappingURL=top.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Genre {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/genre`;\n    }\n    anime(genre, p) {\n        let params = [\"anime\", String(genre)];\n        if (p != null)\n            params[2] = String(p);\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n    manga(genre, p) {\n        let params = [\"manga\", String(genre)];\n        if (p != null)\n            params[2] = String(p);\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n}\nexport default function () {\n    return new Genre();\n}\n//# sourceMappingURL=genre.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Producer {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/producer`;\n    }\n    info(id, p) {\n        let params = [String(id)];\n        if (p != null)\n            params[1] = String(p);\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n}\nexport default function (id, p) {\n    return new Producer().info(id, p);\n}\n//# sourceMappingURL=producer.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Magazine {\n    constructor() {\n        this.baseUrl = `${jikanUrl}/magazine`;\n    }\n    info(id, p) {\n        let params = [String(id)];\n        if (p != null)\n            params[1] = String(p);\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n}\nexport default function (id, p) {\n    return new Magazine().info(id, p);\n}\n//# sourceMappingURL=magazine.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass User {\n    constructor(username) {\n        this.baseUrl = `${jikanUrl}/user/${username}`;\n    }\n    profile() {\n        return jikanGet(joinUrl(this.baseUrl, [\"profile\"]));\n    }\n    history() {\n        return new UserHistory(this.baseUrl);\n    }\n    friends(p) {\n        let params = [\"friends\"];\n        if (p != null)\n            params.push(String(p));\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n    animelist(p) {\n        return new UserAnimelist(this.baseUrl, p);\n    }\n    mangalist(p) {\n        return new UserMangalist(this.baseUrl, p);\n    }\n}\nclass UserHistory {\n    constructor(baseUrl) {\n        this.baseUrl = baseUrl;\n    }\n    all() {\n        const url = joinUrl(this.baseUrl, [\"history\"]);\n        return jikanGet(url);\n    }\n    anime() {\n        const url = joinUrl(this.baseUrl, [\"history\", \"anime\"]);\n        return jikanGet(url);\n    }\n    manga() {\n        const url = joinUrl(this.baseUrl, [\"history\", \"manga\"]);\n        return jikanGet(url);\n    }\n}\nclass UserAnimelist {\n    constructor(baseUrl, p) {\n        this.baseUrl = baseUrl;\n        if (p != null)\n            this.page = String(p);\n        else\n            this.page = \"1\";\n    }\n    getList(params, qparams) {\n        if (qparams != null) {\n            let qparams = Object.keys(params)\n                .filter((k) => params[k] != null)\n                .map((k) => `${k}=${encodeURIComponent(params[k])}`)\n                .join(\"&\");\n            params.push(qparams);\n        }\n        const url = joinUrl(this.baseUrl, params);\n        return jikanGet(url);\n    }\n    all(qparams) {\n        return this.getList([\"animelist\", \"all\", this.page], qparams);\n    }\n    watching(qparams) {\n        return this.getList([\"animelist\", \"watching\", this.page], qparams);\n    }\n    onhold(qparams) {\n        return this.getList([\"animelist\", \"onhold\", this.page], qparams);\n    }\n    dropped(qparams) {\n        return this.getList([\"animelist\", \"dropped\", this.page], qparams);\n    }\n    plantowatch(qparams) {\n        return this.getList([\"animelist\", \"plantowatch\", this.page], qparams);\n    }\n}\nclass UserMangalist {\n    constructor(baseUrl, p) {\n        this.baseUrl = baseUrl;\n        if (p != null)\n            this.page = String(p);\n        else\n            this.page = \"1\";\n    }\n    getList(params, qparams) {\n        if (qparams != null) {\n            let qparams = Object.keys(params)\n                .filter((k) => params[k] != null)\n                .map((k) => `${k}=${encodeURIComponent(params[k])}`)\n                .join(\"&\");\n            params.push(qparams);\n        }\n        const url = joinUrl(this.baseUrl, params);\n        return jikanGet(url);\n    }\n    all(qparams) {\n        return this.getList([\"mangalist\", \"all\", this.page], qparams);\n    }\n    reading(qparams) {\n        return this.getList([\"mangalist\", \"reading\", this.page], qparams);\n    }\n    onhold(qparams) {\n        return this.getList([\"mangalist\", \"onhold\", this.page], qparams);\n    }\n    dropped(qparams) {\n        return this.getList([\"mangalist\", \"dropped\", this.page], qparams);\n    }\n    plantoread(qparams) {\n        return this.getList([\"mangalist\", \"plantoread\", this.page], qparams);\n    }\n}\nexport default function (username) {\n    return new User(username);\n}\n//# sourceMappingURL=user.js.map","import { joinUrl } from \"./url.js\";\nimport { jikanGet, jikanUrl } from \"./jikanApi.js\";\nclass Club {\n    constructor(id) {\n        this.baseUrl = `${jikanUrl}/club/${id}`;\n    }\n    info() {\n        return jikanGet(this.baseUrl);\n    }\n    members(p) {\n        let params = [\"members\"];\n        if (p != null)\n            params.push(String(p));\n        return jikanGet(joinUrl(this.baseUrl, params));\n    }\n}\nexport default function (id) {\n    return new Club(id);\n}\n//# sourceMappingURL=club.js.map","var AnimeGenre;\n(function (AnimeGenre) {\n    AnimeGenre[AnimeGenre[\"action\"] = 1] = \"action\";\n    AnimeGenre[AnimeGenre[\"adventure\"] = 2] = \"adventure\";\n    AnimeGenre[AnimeGenre[\"cars\"] = 3] = \"cars\";\n    AnimeGenre[AnimeGenre[\"comedy\"] = 4] = \"comedy\";\n    AnimeGenre[AnimeGenre[\"dementia\"] = 5] = \"dementia\";\n    AnimeGenre[AnimeGenre[\"demons\"] = 6] = \"demons\";\n    AnimeGenre[AnimeGenre[\"mystery\"] = 7] = \"mystery\";\n    AnimeGenre[AnimeGenre[\"drama\"] = 8] = \"drama\";\n    AnimeGenre[AnimeGenre[\"ecchi\"] = 9] = \"ecchi\";\n    AnimeGenre[AnimeGenre[\"fantasy\"] = 10] = \"fantasy\";\n    AnimeGenre[AnimeGenre[\"game\"] = 11] = \"game\";\n    AnimeGenre[AnimeGenre[\"hentai\"] = 12] = \"hentai\";\n    AnimeGenre[AnimeGenre[\"historical\"] = 13] = \"historical\";\n    AnimeGenre[AnimeGenre[\"horror\"] = 14] = \"horror\";\n    AnimeGenre[AnimeGenre[\"kids\"] = 15] = \"kids\";\n    AnimeGenre[AnimeGenre[\"magic\"] = 16] = \"magic\";\n    AnimeGenre[AnimeGenre[\"martialArts\"] = 17] = \"martialArts\";\n    AnimeGenre[AnimeGenre[\"mecha\"] = 18] = \"mecha\";\n    AnimeGenre[AnimeGenre[\"music\"] = 19] = \"music\";\n    AnimeGenre[AnimeGenre[\"parody\"] = 20] = \"parody\";\n    AnimeGenre[AnimeGenre[\"samurai\"] = 21] = \"samurai\";\n    AnimeGenre[AnimeGenre[\"romance\"] = 22] = \"romance\";\n    AnimeGenre[AnimeGenre[\"school\"] = 23] = \"school\";\n    AnimeGenre[AnimeGenre[\"sciFi\"] = 24] = \"sciFi\";\n    AnimeGenre[AnimeGenre[\"shoujo\"] = 25] = \"shoujo\";\n    AnimeGenre[AnimeGenre[\"shoujoAi\"] = 26] = \"shoujoAi\";\n    AnimeGenre[AnimeGenre[\"shounen\"] = 27] = \"shounen\";\n    AnimeGenre[AnimeGenre[\"shounenAi\"] = 28] = \"shounenAi\";\n    AnimeGenre[AnimeGenre[\"space\"] = 29] = \"space\";\n    AnimeGenre[AnimeGenre[\"sports\"] = 30] = \"sports\";\n    AnimeGenre[AnimeGenre[\"superPower\"] = 31] = \"superPower\";\n    AnimeGenre[AnimeGenre[\"vampire\"] = 32] = \"vampire\";\n    AnimeGenre[AnimeGenre[\"yaoi\"] = 33] = \"yaoi\";\n    AnimeGenre[AnimeGenre[\"yuri\"] = 34] = \"yuri\";\n    AnimeGenre[AnimeGenre[\"harem\"] = 35] = \"harem\";\n    AnimeGenre[AnimeGenre[\"sliceOfLife\"] = 36] = \"sliceOfLife\";\n    AnimeGenre[AnimeGenre[\"supernatural\"] = 37] = \"supernatural\";\n    AnimeGenre[AnimeGenre[\"military\"] = 38] = \"military\";\n    AnimeGenre[AnimeGenre[\"police\"] = 39] = \"police\";\n    AnimeGenre[AnimeGenre[\"psychological\"] = 40] = \"psychological\";\n    AnimeGenre[AnimeGenre[\"thriller\"] = 41] = \"thriller\";\n    AnimeGenre[AnimeGenre[\"seinen\"] = 42] = \"seinen\";\n    AnimeGenre[AnimeGenre[\"josei\"] = 43] = \"josei\";\n})(AnimeGenre || (AnimeGenre = {}));\nexport default AnimeGenre;\n//# sourceMappingURL=animeGenre.js.map","var MangaGenre;\n(function (MangaGenre) {\n    MangaGenre[MangaGenre[\"action\"] = 1] = \"action\";\n    MangaGenre[MangaGenre[\"adventure\"] = 2] = \"adventure\";\n    MangaGenre[MangaGenre[\"cars\"] = 3] = \"cars\";\n    MangaGenre[MangaGenre[\"comedy\"] = 4] = \"comedy\";\n    MangaGenre[MangaGenre[\"dementia\"] = 5] = \"dementia\";\n    MangaGenre[MangaGenre[\"demons\"] = 6] = \"demons\";\n    MangaGenre[MangaGenre[\"mystery\"] = 7] = \"mystery\";\n    MangaGenre[MangaGenre[\"drama\"] = 8] = \"drama\";\n    MangaGenre[MangaGenre[\"ecchi\"] = 9] = \"ecchi\";\n    MangaGenre[MangaGenre[\"fantasy\"] = 10] = \"fantasy\";\n    MangaGenre[MangaGenre[\"game\"] = 11] = \"game\";\n    MangaGenre[MangaGenre[\"hentai\"] = 12] = \"hentai\";\n    MangaGenre[MangaGenre[\"historical\"] = 13] = \"historical\";\n    MangaGenre[MangaGenre[\"horror\"] = 14] = \"horror\";\n    MangaGenre[MangaGenre[\"kids\"] = 15] = \"kids\";\n    MangaGenre[MangaGenre[\"magic\"] = 16] = \"magic\";\n    MangaGenre[MangaGenre[\"martialArts\"] = 17] = \"martialArts\";\n    MangaGenre[MangaGenre[\"mecha\"] = 18] = \"mecha\";\n    MangaGenre[MangaGenre[\"music\"] = 19] = \"music\";\n    MangaGenre[MangaGenre[\"parody\"] = 20] = \"parody\";\n    MangaGenre[MangaGenre[\"samurai\"] = 21] = \"samurai\";\n    MangaGenre[MangaGenre[\"romance\"] = 22] = \"romance\";\n    MangaGenre[MangaGenre[\"school\"] = 23] = \"school\";\n    MangaGenre[MangaGenre[\"sciFi\"] = 24] = \"sciFi\";\n    MangaGenre[MangaGenre[\"shoujo\"] = 25] = \"shoujo\";\n    MangaGenre[MangaGenre[\"shoujoAi\"] = 26] = \"shoujoAi\";\n    MangaGenre[MangaGenre[\"shounen\"] = 27] = \"shounen\";\n    MangaGenre[MangaGenre[\"shounenAi\"] = 28] = \"shounenAi\";\n    MangaGenre[MangaGenre[\"space\"] = 29] = \"space\";\n    MangaGenre[MangaGenre[\"sports\"] = 30] = \"sports\";\n    MangaGenre[MangaGenre[\"superPower\"] = 31] = \"superPower\";\n    MangaGenre[MangaGenre[\"vampire\"] = 32] = \"vampire\";\n    MangaGenre[MangaGenre[\"yaoi\"] = 33] = \"yaoi\";\n    MangaGenre[MangaGenre[\"yuri\"] = 34] = \"yuri\";\n    MangaGenre[MangaGenre[\"harem\"] = 35] = \"harem\";\n    MangaGenre[MangaGenre[\"sliceOfLife\"] = 36] = \"sliceOfLife\";\n    MangaGenre[MangaGenre[\"supernatural\"] = 37] = \"supernatural\";\n    MangaGenre[MangaGenre[\"military\"] = 38] = \"military\";\n    MangaGenre[MangaGenre[\"police\"] = 39] = \"police\";\n    MangaGenre[MangaGenre[\"psychological\"] = 40] = \"psychological\";\n    MangaGenre[MangaGenre[\"seinen\"] = 41] = \"seinen\";\n    MangaGenre[MangaGenre[\"josei\"] = 42] = \"josei\";\n    MangaGenre[MangaGenre[\"doujinshi\"] = 43] = \"doujinshi\";\n    MangaGenre[MangaGenre[\"genderBender\"] = 44] = \"genderBender\";\n    MangaGenre[MangaGenre[\"thriller\"] = 45] = \"thriller\";\n})(MangaGenre || (MangaGenre = {}));\nexport default MangaGenre;\n//# sourceMappingURL=mangaGenre.js.map","var AnimeType;\n(function (AnimeType) {\n    AnimeType[\"tv\"] = \"tv\";\n    AnimeType[\"ova\"] = \"ova\";\n    AnimeType[\"movie\"] = \"movie\";\n    AnimeType[\"special\"] = \"special\";\n    AnimeType[\"ona\"] = \"ona\";\n    AnimeType[\"music\"] = \"music\";\n})(AnimeType || (AnimeType = {}));\nexport default AnimeType;\n//# sourceMappingURL=animeType.js.map","var MangaType;\n(function (MangaType) {\n    MangaType[\"manga\"] = \"manga\";\n    MangaType[\"novel\"] = \"novel\";\n    MangaType[\"oneshot\"] = \"oneshot\";\n    MangaType[\"doujin\"] = \"doujin\";\n    MangaType[\"manhwa\"] = \"manhwa\";\n    MangaType[\"manhua\"] = \"manhua\";\n})(MangaType || (MangaType = {}));\nexport default MangaType;\n//# sourceMappingURL=mangaType.js.map","var AnimeStatus;\n(function (AnimeStatus) {\n    AnimeStatus[\"airing\"] = \"airing\";\n    AnimeStatus[\"completed\"] = \"completed\";\n    AnimeStatus[\"to_be_aired\"] = \"to_be_aired\";\n})(AnimeStatus || (AnimeStatus = {}));\nexport default AnimeStatus;\n//# sourceMappingURL=animeStatus.js.map","var MangaStatus;\n(function (MangaStatus) {\n    MangaStatus[\"publishing\"] = \"publishing\";\n    MangaStatus[\"completed\"] = \"completed\";\n    MangaStatus[\"to_be_published\"] = \"to_be_published\";\n})(MangaStatus || (MangaStatus = {}));\nexport default MangaStatus;\n//# sourceMappingURL=mangaStatus.js.map","var AnimeOrderBy;\n(function (AnimeOrderBy) {\n    AnimeOrderBy[\"title\"] = \"title\";\n    AnimeOrderBy[\"start_date\"] = \"start_date\";\n    AnimeOrderBy[\"end_date\"] = \"end_date\";\n    AnimeOrderBy[\"score\"] = \"score\";\n    AnimeOrderBy[\"type\"] = \"type\";\n    AnimeOrderBy[\"members\"] = \"members\";\n    AnimeOrderBy[\"id\"] = \"id\";\n    AnimeOrderBy[\"episodes\"] = \"episodes\";\n    AnimeOrderBy[\"rating\"] = \"rating\";\n})(AnimeOrderBy || (AnimeOrderBy = {}));\nexport default AnimeOrderBy;\n//# sourceMappingURL=animeOrderBy.js.map","var MangaOrderBy;\n(function (MangaOrderBy) {\n    MangaOrderBy[\"title\"] = \"title\";\n    MangaOrderBy[\"start_date\"] = \"start_date\";\n    MangaOrderBy[\"end_date\"] = \"end_date\";\n    MangaOrderBy[\"score\"] = \"score\";\n    MangaOrderBy[\"type\"] = \"type\";\n    MangaOrderBy[\"members\"] = \"members\";\n    MangaOrderBy[\"id\"] = \"id\";\n    MangaOrderBy[\"chapters\"] = \"chapters\";\n    MangaOrderBy[\"volumes\"] = \"volumes\";\n})(MangaOrderBy || (MangaOrderBy = {}));\nexport default MangaOrderBy;\n//# sourceMappingURL=mangaOrderBy.js.map","var Sort;\n(function (Sort) {\n    Sort[\"ascending\"] = \"ascending\";\n    Sort[\"descending\"] = \"descending\";\n})(Sort || (Sort = {}));\nexport default Sort;\n//# sourceMappingURL=sort.js.map","var Rating;\n(function (Rating) {\n    Rating[\"g\"] = \"g\";\n    Rating[\"ph\"] = \"pg\";\n    Rating[\"pg13\"] = \"pg13\";\n    Rating[\"r17\"] = \"r17\";\n    Rating[\"r\"] = \"r\";\n    Rating[\"rx\"] = \"rx\";\n})(Rating || (Rating = {}));\nexport default Rating;\n//# sourceMappingURL=rating.js.map","import anime from \"./jikan/anime.js\";\nimport manga from \"./jikan/manga.js\";\nimport person from \"./jikan/person.js\";\nimport character from \"./jikan/character.js\";\nimport search from \"./jikan/search.js\";\nimport season from \"./jikan/season.js\";\nimport seasonArchive from \"./jikan/seasonArchive.js\";\nimport seasonLater from \"./jikan/seasonLater.js\";\nimport schedule from \"./jikan/schedule.js\";\nimport top from \"./jikan/top.js\";\nimport genre from \"./jikan/genre.js\";\nimport producer from \"./jikan/producer.js\";\nimport magazine from \"./jikan/magazine.js\";\nimport user from \"./jikan/user.js\";\nimport club from \"./jikan/club.js\";\n// Types\nimport AnimeGenre from \"./jikan/types/animeGenre.js\";\nimport MangaGenre from \"./jikan/types/mangaGenre.js\";\nimport AnimeType from \"./jikan/types/animeType.js\";\nimport MangaType from \"./jikan/types/mangaType.js\";\nimport AnimeStatus from \"./jikan/types/animeStatus.js\";\nimport MangaStatus from \"./jikan/types/mangaStatus.js\";\nimport AnimeOrderBy from \"./jikan/types/animeOrderBy.js\";\nimport MangaOrderBy from \"./jikan/types/mangaOrderBy.js\";\nimport Sort from \"./jikan/types/sort.js\";\nimport Rating from \"./jikan/types/rating.js\";\n//\nclass JikanClient {\n    constructor() {\n        //Jikan API\n        this.anime = anime;\n        this.manga = manga;\n        this.person = person;\n        this.character = character;\n        this.search = search;\n        this.season = season;\n        this.seasonArchive = seasonArchive;\n        this.seasonLater = seasonLater;\n        this.schedule = schedule;\n        this.top = top;\n        this.genre = genre;\n        this.producer = producer;\n        this.magazine = magazine;\n        this.user = user;\n        this.club = club;\n        this.types = {\n            AnimeGenre,\n            MangaGenre,\n            AnimeType,\n            MangaType,\n            AnimeStatus,\n            MangaStatus,\n            AnimeOrderBy,\n            MangaOrderBy,\n            Sort,\n            Rating\n        };\n    }\n}\n// import login from \"./methods/poly/noApiLogin\";\n// import notifications from \"./methods/poly/loginRequired/notifications\";\n// import animeEdit from \"./methods/poly/loginRequired/animeEdit\";\n// class ScraperClient {\n//   public login = login;\n//   public notifications = notifications;\n//   public animeEdit = animeEdit;\n// }\nconst Mal = new JikanClient();\nexport { Mal, JikanClient, }; //ScraperClient };\nexport default Mal;\n//# sourceMappingURL=mod.js.map","import { Mal, JikanClient } from \"./mod.js\";\nimport esmFetch from \"esm-fetch\";\n// @ts-ignore\nglobalThis.jikanGet = (url) => esmFetch(url);\nexport { Mal, JikanClient };\nexport default Mal;\n//# sourceMappingURL=index.js.map"],"names":["AnimeGenre","MangaGenre","AnimeType","MangaType","AnimeStatus","MangaStatus","AnimeOrderBy","MangaOrderBy","Sort","Rating"],"mappings":"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"}